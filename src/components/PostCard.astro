---
interface Props {
  title: string; 
  imageUrl?: string; 
  imageAlt?: string; 
  description: string; 
  tags: string[]; 
  slug: string; 
  date: Date;
};

const { title, imageUrl, imageAlt, description, tags, slug, date } = Astro.props;
const formattedDate = date.toLocaleDateString('en-US', {
  year: 'numeric', 
  month: 'long', 
  day: 'numeric',
});
---
<a href={`/blog/${slug}/`} class="block group bg-gray-900/70 backdrop-blur-sm p-6 rounded-lg shadow-lg hover:shadow-brand-accent/30 transition-all duration-300 ease-in-out transform hover:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-brand-accent focus:ring-opacity-70">
  {imageUrl && ( 
  <div class="mb-4 overflow-hidden rounded aspect-video">
    <img src={imageUrl} alt={imageAlt || ""} class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300 ease-in-out" loading="lazy" />
  </div>
  )}
  <h3 class="text-xl lg:text-2xl font-headline text-brand-white mb-2 group-hover:text-brand-accent transition-colors duration-200">{title}</h3>
  <p class="text-xs text-gray-400 mb-3">{formattedDate}</p>
  <p class="text-gray-300 mb-4 text-sm leading-relaxed line-clamp-3">{description}</p>
  {tags && tags.length > 0 && (
  <div class="flex flex-wrap gap-2 mt-auto pt-2">
    {tags.map(tag => (
      <span class="text-xs bg-brand-accent/20 text-brand-accent px-2.5 py-1 rounded-full font-mono lowercase tracking-tight">#{tag}</span>
    ))}
  </div>
  )}
</a>
<style>
/* Insert line clamp here if necessary */
</style>
